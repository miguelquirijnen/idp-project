/*************
  Lesrooster
*************/

vocabulary V{
  type group         // The classgroups
  type teacher	 // The teachers
  type course			 // The courses
  type sessions isa int   // The number of sessions of a course
  type day           // The day of the week
  type hour isa int   // The hour of a course (1 to 7)

  monday:   day     // 
  tuesday:   day    // 
  wednesday:  day   // The different days in the week.
  thursday: day     // 
  friday:   day     // 

  degree(teacher,course)
    // degrees(t,c) declares that teacher t has a degree for the course c.
  taughtBy(group,course) : teacher
    // teaches(t,v) is the teacher that instructs the course for class c
  mustTeach(teacher,group,day,hour)
    // mustTeach(t,c,d,h) is true iff. teacher t instructs class c
		// on the day d, at hour h.

  hoursPerWeek(group,course) : sessions	
    // The number of hours a cource must be taught each week.

  has(course,group,day,hour)	
    // has(c,g,d,h) is true iff. group g has course c at day d and hour h.

}
theory T:V{

  // A course must be taught the correct number of hours per week.
  !g[group], c[course]: hoursPerWeek(g, c) = #{h[hour], d[day]: has(c, g, d, h)}.

  // A teacher can only teach one class at any time.
  !t[teacher], d[day], h[hour]: #{g[group]: mustTeach(t, g, d, h)} < 2.

  // A teacher must have the right degree to teach a course.
  !g[group], c[course], t[teacher]: taughtBy(g, c) = t => degree(t, c).

  // No courses wednesday afternoon
  ~?c[course], g[group], h[hour]: has(c, g, wednesday, h) & h > 4.

  // A classgroup can only follow one class at any time.
  !g[group], d[day], h[hour]: #{c[course]: has(c, g, d, h)} < 2.
    
  // A teacher must teach a group at a certain time if and only if there is a course which is taught by that teacher and which that group has at that time
  // Without definitions
  !g[group], d[day], h[hour], t[teacher]: mustTeach(t, g, d, h) <=> ?c[course]: has(c, g, d, h) & taughtBy(g, c) = t.
  
  // With definitions
  /*{
     !g[group], c[course], d[day], h[hour]: mustTeach(taughtBy(g, c), g, d, h) <- has(c, g, d, h).
  }*/
  
}

include "idpd3/run.idp"
include "draw.idp"
include "instance_1.idp"
include "solution.aidp"
